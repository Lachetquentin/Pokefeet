<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
  <data name="Daily" xml:space="preserve">
    <value>Daily</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="dialog_Welcome" xml:space="preserve">
    <value>Welcome to the world of POKEMON!
&lt;br/&gt;&lt;br/&gt;
In this game, you will be presented with mysterious Pokémon footprints, and it's your task to identify the Pokémon associated with each footprint. 
Put your Pokémon knowledge to the test and see how many you can guess correctly!
</value>
  </data>
  <data name="dialog_howtoplay" xml:space="preserve">
    <value>How to play</value>
  </data>
  <data name="dialog_howtoplay_desc" xml:space="preserve">
    <value>&lt;b&gt;Guess the Pokémon:&lt;/b&gt; Initially, you will be shown a Pokémon footprint with no additional clues. Take your best guess at the Pokémon's name. For example, if you see a footprint that looks like it could be Pikachu's, type "Pikachu" and hit enter.

&lt;br /&gt;

&lt;b&gt;Correct Guess:&lt;/b&gt; If your guess is correct, congratulations! You've identified the Pokémon. Wait the next day to guess another one !

&lt;br /&gt;

&lt;b&gt;Wrong Guess:&lt;/b&gt; If you guess incorrectly, don't worry. You have a limited number of tries. After {0} wrong guesses, the game ends.

&lt;br /&gt;

&lt;b&gt;Continue Playing:&lt;/b&gt; Every day a new pokemon's footprint is available ! Don't forget to come back playing !

&lt;br /&gt;</value>
  </data>
  <data name="dialog_guessthemall" xml:space="preserve">
    <value>Gotta Guess 'Em All!</value>
  </data>
  <data name="dialog_guessthemall_desc" xml:space="preserve">
    <value>Challenge yourself and see if you can identify all the Pokémon by their footprints. Good luck, Pokémon Trainer!</value>
  </data>
  <data name="dialog_credit" xml:space="preserve">
    <value>Credit</value>
  </data>
  <data name="Createdby" xml:space="preserve">
    <value>is created by</value>
  </data>
  <data name="HeavilyInspiredBy" xml:space="preserve">
    <value>is heavily inspired by the following sites:</value>
  </data>
  <data name="SourceCode" xml:space="preserve">
    <value>Source Code:</value>
  </data>
  <data name="ClickHere" xml:space="preserve">
    <value>Click Here.</value>
  </data>
  <data name="ThanksTo" xml:space="preserve">
    <value>Thanks to:</value>
  </data>
  <data name="Pkball_Loading" xml:space="preserve">
    <value>Pokeball Loading</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="WhosThatPokemon" xml:space="preserve">
    <value>Who's that pokemon?</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="Legendary" xml:space="preserve">
    <value>Legendary</value>
  </data>
  <data name="Mythical" xml:space="preserve">
    <value>Mythical</value>
  </data>
  <data name="Generation" xml:space="preserve">
    <value>Generation</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NextPokemonIn" xml:space="preserve">
    <value>The next Pokémon will appear in:</value>
  </data>
  <data name="Victory" xml:space="preserve">
    <value>Victory!</value>
  </data>
  <data name="Defeat" xml:space="preserve">
    <value>Defeat!</value>
  </data>
  <data name="YouGuessed" xml:space="preserve">
    <value>You guessed:</value>
  </data>
  <data name="NoGuessed" xml:space="preserve">
    <value>You didn't guessed:</value>
  </data>
  <data name="Player" xml:space="preserve">
    <value>Trainer</value>
  </data>
  <data name="Infinite" xml:space="preserve">
    <value>Free play</value>
  </data>
  <data name="Replay" xml:space="preserve">
    <value>Replay</value>
  </data>
</root>