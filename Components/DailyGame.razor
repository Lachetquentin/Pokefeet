@using Pokefeet.Ressources
@inject NavigationManager Navigation
@inject IJSRuntime Js
@attribute [Route(Constants.Url.Daily)]

@if (_isLoading)
{
	<PokeballLoading/>
}
else
{
	@if (_error)
	{
		<MudText Class="pkmnBody2 card d-flex justify-center">@Translation.GenericError</MudText>
	}
	else if (_gameOver)
	{
		<GameResult HasWin="@false" Pkmn="@_pokemonInfo" PkmnName="@_pokemonName" />
	}
	else if (_gameWon)
	{
		<GameResult HasWin="@true" Pkmn="@_pokemonInfo" PkmnName="@_pokemonName" />
	}
	else
	{
		<div class="mt-16">

			<div class="d-flex justify-center">
				<HpBar HpLeft="_player.GetLife()" Streak="0" />
			</div>

			<div class="d-flex justify-center">
				<MudImage Src="@ImgPath" Width="128" Height="128" Elevation="25" Class="rounded-lg ma-4 imgSize card" />
			</div>

			<MudTextField @bind-Value="PlayerAnswer" T="string" 
				OnKeyUp="ValidSubmit" Immediate="true"
				Underline="false" Placeholder="@Translation.WhosThatPokemon"
				Class="ml-2 mr-2 card" Variant="Variant.Outlined" 
				AutoFocus TextUpdateSuppression="false" Margin="Margin.None" />

			<div class="@GetSearchClass()" style="max-height: 150px; overflow-y: auto;">
				@foreach (var item in _filteredItems)
				{
					<div @onclick="() => SelectItem(item)" style="height:70px;" class="d-flex align-center">
						<img style="width: 70px; height: 70px; margin-left: 1.25rem;" src="@Helper.GetPokemonImg(item.Id)" alt="@item.Name" />
						<p style="margin-left: 1.25rem;" class="pkmnBody">
							@item.Name
							<br />
							<p class="pkmnText">Gen @item.Generation, @item.Type1/@item.Type2</p>
						</p>
					</div>
				}
			</div>

		</div>
	}

	@if (_guessStarted)
	{
		<div class="grid-container mt-2">
				<div class="header-container pkmnBody2">
					<div class="header">Pokemon</div>
					<div class="header">Type 1</div>
					<div class="header">Type 2</div>
					<div class="header">@Translation.Color</div>
					<div class="header">@Translation.Legendary</div>
					<div class="header">@Translation.Mythical</div>
					<div class="header">@Translation.Generation</div>
				</div>

				@foreach (var pokemon in _pokemonList)
				{
					<div class="header-container pkmnText">
						<div class="row-card">
							<img src="@Helper.GetPokemonImg(pokemon.Id)" alt="@pokemon.Name" />
						</div>
						<div class="@GetTypeRowClass(pokemon, Constants.PokemonCategories.Type1)">@pokemon.Type1</div>
						<div class="@GetTypeRowClass(pokemon,Constants.PokemonCategories.Type2)">@pokemon.Type2</div>
						<div class="@GetRowClass(pokemon, Constants.PokemonCategories.Color)">@pokemon.Color</div>
						<div class="@GetRowClass(pokemon, Constants.PokemonCategories.IsLegendary)">@Helper.TranslateBool(pokemon.IsLegendary)</div>
						<div class="@GetRowClass(pokemon, Constants.PokemonCategories.IsMythical)">@Helper.TranslateBool(pokemon.IsMythical)</div>
						<div class="@GetRowClass(pokemon, Constants.PokemonCategories.Generation)">@pokemon.Generation</div>
					</div>
				}
		</div>
	}

	<div class="d-flex justify-center mt-2">
		<MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.ArrowBack" OnClick="GoBack" Class="pkmnBody card btn">
			@Translation.Back
		</MudButton>
	</div>
}